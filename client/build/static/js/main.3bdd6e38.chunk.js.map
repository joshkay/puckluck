{"version":3,"sources":["components/PersistentDrawerLeft.js","pages/Landing.js","pages/NHLScores.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["PersistentDrawerLeft","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this$props","this","props","classes","theme","react_default","a","createElement","className","root","CssBaseline_default","AppBar_default","position","classNames","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","Typography_default","variant","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","Link","to","drawerLink","ListItem_default","button","ListItemText_default","primary","content","contentShift","children","React","Component","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","textDecoration","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","Landing","NHLScores","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","games","axios","get","data","console","log","App","BrowserRouter","components_PersistentDrawerLeft","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3bdd6e38.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerLink: {\r\n    textDecoration: 'none'\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n});\r\n\r\nclass PersistentDrawerLeft extends React.Component \r\n{\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!open}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Puck Luck\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <Link to={'/nhl/scores'} className={classes.drawerLink}>\r\n              <ListItem button>\r\n                <ListItemText primary=\"NHL Scores\" />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </Drawer>\r\n        <main\r\n          className={classNames(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          { this.props.children }\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPersistentDrawerLeft.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);","import React, { Component } from 'react';\r\n\r\nimport PersistentDrawerLeft from '../components/PersistentDrawerLeft';\r\n\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nclass Landing extends Component \r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n        Landing\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nclass NHLScores extends Component \r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.state = {\r\n      games: null\r\n    }\r\n  }\r\n\r\n  async componentDidMount()\r\n  {\r\n    const { data } = await axios.get('/api/nhl/scores');\r\n    console.log(data);\r\n  }\r\n\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n        <h1>Scores</h1>\r\n        { this.state.games }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NHLScores;","import React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport PersistentDrawerLeft from './components/PersistentDrawerLeft';\nimport Landing from './pages/Landing';\nimport NHLScores from './pages/NHLScores';\n\nclass App extends Component \n{\n  render() \n  {\n    return (\n      <BrowserRouter>\n        <PersistentDrawerLeft>\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route path='/nhl/scores' component={NHLScores} />\n          </Switch>\n        </PersistentDrawerLeft>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}